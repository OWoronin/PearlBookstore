@page "/buy"
@rendermode InteractiveAuto
@inject IHttpClientFactory clientFactory
@inject IDialogService dialogService
@inject ISnackbar Snackbar
@inject BuyItemsService buyService

<PageTitle>Zakup publikację</PageTitle>
<MudText Typo="Typo.h3" Align="Align.Center" Class="m-3">Zakup publikacje</MudText>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-12" Centered="true" @ref="tabs">
    <MudTabPanel Text="Wyszukaj publikację" @ref="searchTab">
        <MudGrid>
            <MudItem xs="2">
                <MudPaper Class="pa-4 d-flex justify-content-center">
                    <MudButton OnClick="OnExpandCollapseClick" ButtonType="ButtonType.Button" Color="Color.Primary" Variant="Variant.Filled">@(expanded ? "Zwiń" : "Rozwiń")</MudButton>
                </MudPaper>
            </MudItem>
            <MudItem xs="7">
                <MudTextField Clearable="true" @bind-Value="@Value" AutoFocus="true" Placeholder="Tytuł lub Autor" />
            </MudItem>
            <MudItem xs="3" Style="display:flex;justify-content:center">
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Success" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Search" Class="m-3">Wyszukaj publikacje</MudButton>
            </MudItem>
            <MudItem xs="2">
                <MudPaper Class="pa-4">
                    <MudStack Spacing="2">
                        <MudCollapse Expanded="expanded">
                            <MudSelect Label="Autor" @bind-Value="AuthorId" Placeholder="Autor" T="int" Clearable="true" Strict="true">
                                @if(authors != null)
                                {
                                    @*<MudSelectItem Value="0" Disabled>Autor</MudSelectItem>*@
                                    @foreach (var type in authors)
                                    {
                                        <MudSelectItem Value="@type.Id">@type.Name @type.Surname</MudSelectItem>
                                    }
                                }
                            </MudSelect>
                            <MudDivider />
                            <MudSelect Label="Gatunek" @bind-Value="GenreId" Placeholder="Gatunek" T="int" Clearable="true" Strict="true">
                                @if(genres != null)
                                {
                                    @*<MudSelectItem Value="0" Disabled>Gatunek</MudSelectItem>*@
                                    @foreach (var type in genres)
                                    {
                                        <MudSelectItem Value="@type.Id">@type.Name</MudSelectItem>
                                    }
                                }
                            </MudSelect>
                            <MudDivider />
                            <MudSlider @bind-Value="PriceValueMin" Min="20" Max="250">Cena minimalna: @PriceValueMin.ToString() zł</MudSlider>
                            <MudDivider />
                            <MudSlider @bind-Value="PriceValueMax" Min="20" Max="250">Cena maksymalna: @PriceValueMax.ToString() zł</MudSlider>
                            <MudDivider />
                            <MudCheckBox Value="@Hard" Label="Twarda okładka" />
                            <MudDivider />
                            <MudCheckBox Value="@Soft" Label="Miękka okładka" />
                            <MudDivider />
                            <MudCheckBox Value="@Ebook" Label="Ebook" />
                            <MudDivider />
                            <MudCheckBox Value="@AudioBook" Label="Audiobook" />
                        </MudCollapse>
                    </MudStack>
                </MudPaper>
            </MudItem>
            @*////////////////////////////////////////////////////////////////////////////////////////////////////*@
            <MudItem xs="10">
                <MudTable Items="@items" Bordered="true" SortLabel="SortBy" Height="50vh" FixedHeader="true">
                    <HeaderContent>
                        <MudTh>Tytuł</MudTh>
                        <MudTh>Autor</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ItemDto,object>(x=>x.TypeDto.Id)">Typ</MudTableSortLabel></MudTh>
                        <MudTh>Cena</MudTh>
                        <MudTh>Dodaj do zakup</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Tytuł">@context.Title</MudTd>
                        <MudTd DataLabel="Autor">@context.AuthorDto.Name @context.AuthorDto.Surname</MudTd>
                        <MudTd DataLabel="Typ">@context.TypeDto.Name</MudTd>
                        <MudTd DataLabel="Cena">@context.Price zł</MudTd>
                        <MudTd DataLabel="Dodaj do zakup" Style="display:flex;justify-content:center;">
                            <MudButton ButtonType="ButtonType.Button" Color="Color.Success" Variant="Variant.Filled" Disabled="context.Counter==0">
                                @if (context.Counter == 0)
                                {
                                    @("Niedostępny")
                                }
                                else
                                {
                                    @("Dodaj")
                                }
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudItem>
            <MudItem xs="10">

            </MudItem>
            <MudItem xs="2">
                <MudButton ButtonType="ButtonType.Button" Color="Color.Success" Variant="Variant.Filled" OnClick="()=>ChangeTab(summaryTab)">Przejdź do podsumowania</MudButton>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    @*------------------------------------------------------------------------------------------------------------*@
    <MudTabPanel Text="Podsumowanie" @ref="summaryTab">
        <MudGrid>
            <MudItem xs="12">
                <MudTable Items="@items" Bordered="true" Height="60vh" FixedHeader="true">
                    <HeaderContent>
                        <MudTh>Tytuł</MudTh>
                        <MudTh>Autor</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ItemDto,object>(x=>x.TypeDto.Id)">Typ</MudTableSortLabel></MudTh>
                        <MudTh>Cena</MudTh>
                        <MudTh>Usuń z zakupu</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Tytuł">@context.Title</MudTd>
                        <MudTd DataLabel="Autor">@context.AuthorDto.Name @context.AuthorDto.Surname</MudTd>
                        <MudTd DataLabel="Typ">@context.TypeDto.Name</MudTd>
                        <MudTd DataLabel="Cena">@context.Price zł</MudTd>
                        <MudTd DataLabel="Usuń z zakupu"><MudButton ButtonType="ButtonType.Button" Color="Color.Error" Variant="Variant.Outlined">Usuń</MudButton></MudTd>
                    </RowTemplate>
                </MudTable>
            </MudItem>
            <MudItem xs="9">

            </MudItem>
            <MudItem xs="3">
                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd">
                    <MudText Align="Align.Center">Cena wynosi: @PriceAll zł</MudText>
                    <MudButton ButtonType="ButtonType.Button" Color="Color.Error" Variant="Variant.Outlined">Wyczyść zakup</MudButton>
                    <MudButton ButtonType="ButtonType.Button" Color="Color.Success" Variant="Variant.Filled">Zatwierdź zakup</MudButton>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
</MudTabs>

@code {
    decimal PriceAll;

    MudTabs tabs;
    MudTabPanel searchTab;
    MudTabPanel summaryTab;
    public bool Hard { get; set; }
    public bool Soft { get; set; }
    public bool Ebook { get; set; }
    public bool AudioBook { get; set; }
    public int AuthorId { get; set; }
    public int GenreId { get; set; }
    public double PriceValueMin { get; set; }
    public double PriceValueMax { get; set; }
    public string Value { get; set; }
    public bool expanded = false;
    public bool firstExpand = true;
    private HttpClient httpClient;
    private List<GenreDto> genres;
    private List<AuthorDto> authors;
    private List<ItemDto> items;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        PriceValueMin = 20;
        PriceValueMax = 100;
        httpClient = clientFactory.CreateClient("Anonymous");
    }

    private async Task OnExpandCollapseClick()
    {
        expanded = !expanded;
        if(firstExpand)
        {
            firstExpand = false;
            var genresResponse = await httpClient.GetFromJsonAsync<List<GenreDto>>("api/genre/All");
            if(genresResponse == null || genresResponse.Count == 0)
            {
                expanded = !expanded;
                Snackbar.Add("Nie udało się pobrać gatunków z systemu. Skontaktuj się z administratorem.", Severity.Error);
            }
            else
            {
                genres = genresResponse;
            }

            var authorsResponse = await httpClient.GetFromJsonAsync<List<AuthorDto>>("api/author/All");

            if(authorsResponse == null || authorsResponse.Count == 0)
            {
                expanded = !expanded;
                Snackbar.Add("Nie udało się pobrać autorów z systemu. Skontaktuj się z administratorem.", Severity.Error);
            }
            else
            {
                authors = authorsResponse;
            }
        }
    }

    void ChangeTab(MudTabPanel panel)
    {
        tabs.ActivatePanel(panel);
    }
}
